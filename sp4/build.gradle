plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id "io.qameta.allure" version "2.8.1"
}

group 'org.autotests'
version '1.0-SNAPSHOT'

allure {
    version = '2.8.1'
    autoconfigure = true
    aspectjweaver = true
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.seleniumhq.selenium:selenium-java:3.14.0"
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '3.14.0'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-api', version: '3.141.59'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.14.3'
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '3.4.0'
    implementation group: 'com.frimastudio', name: 'slf4j-kotlin-extensions', version: '2.0.0'
    implementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.10.0'
    implementation "org.slf4j:slf4j-simple:1.6.1"
    implementation group: 'com.frimastudio', name: 'slf4j-kotlin-extensions', version: '2.0.0'
    testImplementation group: 'org.testng', name: 'testng', version: '6.14.3'
    testImplementation "junit:junit:$junitVersion"
    testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.1.8'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-test-testng', version: '1.3.60'
    implementation 'com.github.eptests:uitestcore:1.0.0'
    implementation 'com.github.kittinunf.fuel:fuel:2.3.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation group: 'com.github.visual-regression-tracker', name: 'sdk-java', version: '4.5.1'
    compile group: 'ru.yandex.qatools.ashot', name: 'ashot', version: '1.5.3'
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

test {
    useTestNG() {
        // runlist to executed. path is relative to current folder
        useDefaultListeners = true // Tells TestNG to execute its default reporting structure
    }
    if (System.getProperty("params")) {
        systemProperty "params", System.getProperty("params")
    }
}

task functionalTestWithReport(type: Test) {
    useTestNG() {
        // runlist to executed. path is relative to current folder
        useDefaultListeners = true // Tells TestNG to execute its default reporting structure
    }
    include 'com/sp4/uitest/tests/*'
    finalizedBy 'allureReport'
    finalizedBy 'allureServe'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}